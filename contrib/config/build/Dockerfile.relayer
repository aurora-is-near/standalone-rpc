FROM golang:alpine as build

ARG KEY
ARG VERSION
ARG BUILD_ID
ARG STAGE

LABEL stage="$STAGE"
LABEL build="$BUILD_ID"

# for private repo
#ENV GOPRIVATE=github.com/aurora-is-near
#RUN apk add --no-cache openssh-client  \
#    && mkdir -p /root/.ssh  \
#    && chmod 700 /root/.ssh
#COPY sshconfig /root/.ssh/config
#COPY gitconfig /root/.gitconfig
#RUN echo "$KEY" | base64 -d | bzip2 -d > /root/.ssh/id_docker_build  \
#    && chmod 600 /root/.ssh/*  \
#    && eval $(ssh-agent -s) && ssh-add /root/.ssh/id_docker_build

RUN apk add --no-cache git  \
    && mkdir /src && mkdir /src/nearkey && cd /src  \
    && apk add --no-cache make  \
    && git clone https://github.com/aurora-is-near/relayer2-public.git && cd relayer2-public  \
    && git checkout "$VERSION" && make  \
    && cd ../ && git clone https://github.com/peak/s5cmd.git && cd s5cmd  \
    && go build -o s5cmd

COPY nearkey.go /src/nearkey/nearkey.go
RUN cd /src/nearkey && go build nearkey.go

# for private repo
#RUN rm -r /root/.ssh && rm /root/.gitconfig

FROM alpine

COPY --from=build /src/relayer2-public/out/build.info /version
COPY --from=build /src/relayer2-public/out/relayer /usr/local/bin/
COPY --from=build /src/s5cmd/s5cmd /usr/local/bin/
COPY --from=build /src/nearkey/nearkey /usr/local/bin/

RUN mkdir -p /config /data/relayer /data/refiner /near /log
VOLUME /config
VOLUME /data
VOLUME /near
VOLUME /log

ENTRYPOINT [ "/usr/local/bin/relayer", "start", "-c", "/config/relayer.yaml" ]
